<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
           
	<context:component-scan base-package="com.jiang.framework.service,com.jiang.framework.dao"></context:component-scan>
	
	
	
	 <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 		<property name="location">
  			<value>classpath:DBPool.properties</value>
 		</property>
	</bean> 

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
	    <!-- 基本属性 url、user、password -->  
	    <property name="url" value="${jdbcUrl}" />  
	    <property name="username" value="${user}" />  
	    <property name="password" value="${password}" />  
	        
	    <!-- 配置初始化大小、最小、最大 -->  
	    <property name="initialSize" value="${initialSize}" />  
	    <property name="minIdle" value="${minIdle}" />   
	    <property name="maxActive" value="${maxActive}" />  
	   
	    <!-- 配置获取连接等待超时的时间 -->  
	    <property name="maxWait" value="${maxWait}" />  
	   
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />  
	   
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
	    
	    <property name="validationQuery" value="${validationQuery}" />  
	    <property name="testWhileIdle" value="${testWhileIdle}" />  
	    <property name="testOnBorrow" value="${testOnBorrow}" />  
	    <property name="testOnReturn" value="${testOnReturn}" />  
	   
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
	    <property name="poolPreparedStatements" value="${poolPreparedStatements}" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="${maxPoolPreparedStatementPerConnectionSize}" />  
	   
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
	    <property name="filters" value="stat" />   
	</bean>  

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	
	<!-- <bean id="InsertUpdateMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
    	<property name="targetObject">  
        	<ref bean="cacheSynDBService"/>  
    	</property>  
    	<property name="targetMethod">  要执行的方法名称  
        	<value>doInsertAndUpdate</value>  
    	</property>  
	</bean>
	
	
	<bean id="CronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean" >  
    <property name="jobDetail" ref="InsertUpdateMethod"></property>  
    <property name="cronExpression" value="0 0/5 * * * ?"></property>  
	</bean>
	
	 
    
  
	======================== 调度工厂 ========================  
	<bean id="SpringJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy" >  
    	<property name="triggers">  
        	<list>  
            	<ref bean="CronTriggerBean"/>
        	</list>  
    	</property>
    	<property name="configLocation" value="classpath:quartz.properties" />  
	</bean> -->
</beans>